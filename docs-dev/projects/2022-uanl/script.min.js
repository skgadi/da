function syncSleepFor(t){let e=(new Date).getTime();for(;(new Date).getTime()<e+t;);}function isEven(t){return t%2==0}const{createApp:createApp}=Vue,leastCommonMultiple=(t,e)=>t*e/greatestCommonDivisor(t,e),greatestCommonDivisor=(t,e)=>{const s=t%e;return 0===s?e:greatestCommonDivisor(e,s)};class fileVar{constructor(){this.pointKeys=["t","T","TR","S0","S1","S2","S3","R"],this.maxNumberOfRows=1e5,this.clearData()}clearData(){this.data=[["Time","Set Temperature","Temperature","Relay 1","Relay 2","Relay 3","Relay 4","Voltage","Resistance"],["seconds","Degree C","Degree C","","","","","Volts","Ohms"]]}addData(t){let e=this.data.length,s=[];if(this.data[this.data.length-1].t>=t.t)for(let a=this.data.length-1;a>=0;a--)if(this.data[a].t==t.t){e=a,s=this.data[a];break}for(let e=0;e<this.pointKeys.length;e++)t.hasOwnProperty(this.pointKeys[e])&&(s[e]=t[this.pointKeys[e]]);this.data[e]=s,this.data.length>=this.maxNumberOfRows&&(this.saveAsCSV(),this.clearData())}saveAsCSV(){let t=this.data,e=new Date,s="";s+=e.getFullYear(),s+=e.getMonth(),s+=e.getDay(),s+="_",s+=e.getHours(),s+=e.getMinutes(),s+=e.getSeconds(),s+="_results",this.exportToCsv(s,t)}exportToCsv(t,e){let s=function(t){let e="";for(let s=0;s<t.length;s++){let a=null===t[s]?"":t[s].toString();t[s]instanceof Date&&(a=t[s].toLocaleString());let i=a.replace(/"/g,'""');i.search(/("|,|\n)/g)>=0&&(i='"'+i+'"'),s>0&&(e+=","),e+=i}return e+"\n"},a="";for(let t=0;t<e.length;t++)a+=s(e[t]);let i=new Blob([a],{type:"text/csv;charset=utf-8;"});if(navigator.msSaveBlob)navigator.msSaveBlob(i,t);else{let e=document.createElement("a");if(void 0!==e.download){let s=URL.createObjectURL(i);e.setAttribute("href",s),e.setAttribute("download",t),e.style.visibility="hidden",document.body.appendChild(e),e.click(),document.body.removeChild(e)}}}}const chartVar={series:{},root:null,chart:null,maxChartData:1e3,createSeries:function(t,e){let s=chartVar.chart.series.push(am5xy.SmoothedXLineSeries.new(chartVar.root,{name:t,xAxis:chartVar.xAxis,yAxis:chartVar.yAxis,valueYField:e,valueXField:"t",tooltip:am5.Tooltip.new(chartVar.root,{}),legendLabelText:"{name}",legendRangeLabelText:"{name}"}));s.strokes.template.set("strokeWidth",2),s.get("tooltip").label.set("text","[bold]{name}[/]\n{valueX}: {valueY}"),s.data.setAll([]),this.series[e]=s},makeRoot:function(){this.root=am5.Root.new("chartdiv")},init:function(){this.root.setThemes([am5themes_Animated.new(this.root)]),this.chart=this.root.container.children.push(am5xy.XYChart.new(this.root,{panY:!1,wheelY:"zoomX",layout:this.root.verticalLayout,maxTooltipDistance:0})),this.yAxis=this.chart.yAxes.push(am5xy.ValueAxis.new(this.root,{extraTooltipPrecision:1,renderer:am5xy.AxisRendererY.new(this.root,{})})),this.xAxis=this.chart.xAxes.push(am5xy.ValueAxis.new(this.root,{extraTooltipPrecision:1,renderer:am5xy.AxisRendererX.new(this.root,{})})),this.createSeries("Relay 1","S0"),this.createSeries("Relay 2","S1"),this.createSeries("Relay 3","S2"),this.createSeries("Relay 4","S3"),this.createSeries("Temperature setpoint","TR"),this.createSeries("Temperature","T"),this.createSeries("Resistance","R"),this.chart.set("cursor",am5xy.XYCursor.new(this.root,{behavior:"zoomXY",xAxis:this.xAxis})),this.xAxis.set("tooltip",am5.Tooltip.new(this.root,{themeTags:["axis"]})),this.yAxis.set("tooltip",am5.Tooltip.new(this.root,{themeTags:["axis"]})),this.legend=this.chart.children.push(am5.Legend.new(this.root,{})),this.legend.data.setAll(this.chart.series.values)},addDataPoint:function(t){let e=Object.keys(t),s=1;for(let a=0;a<e.length;a++)if("t"!=e[a]){let i={t:t.t};i[e[a]]=t[e[a]],this.series[e[a]].data.push(i),this.series&&this.series[e[a]]&&this.series[e[s]]&&this.series[e[a]].data&&this.series[e[s]].data&&this.series[e[a]].data.length>this.series[e[s]].data.length&&(s=a)}if(console.log(e[s]),this.series&&this.series[e[s]]&&this.series[e[s]].data.length>this.maxChartData){console.log(this.series[e[s]].data);this.series[e[s]].data.length,this.maxChartData;let t=this.series[e[s]].data.values[this.series[e[s]].data.length-this.maxChartData].t;for(let s=0;s<e.length;s++)for(;this.series[e[s]]&&this.series[e[s]].data.values[0]&&this.series[e[s]].data.values[0].t<t;)this.series[e[s]].data.shift()}},clear:function(){this.chart.dispose()},setVisibility:function(t,e){e?this.series[t].show():this.series[t].hide()}};let vueApp=createApp({data:()=>({status:{process:{isRunning:!1,hTimeInterval:null,t:0,outTimeInt:30,rRI:1,lastOutTime:-1/0},comm:{text:"Communications",icon:"fa-fw fa-solid fa-angle-down",expand:!0},da:{text:"[Not connected]",icon:"fa-fw fa-regular fa-circle-xmark"},serial:{text:"[Not connected]",icon:"fa-fw fa-regular fa-circle-xmark"},visa:{text:"[Not connected]",icon:"fa-fw fa-regular fa-circle-xmark"}},ports:{serial:{selcted:null,list:[],baud:115200,tOut:.05},visa:{selcted:null,list:[]}},wSocket:{readyState:3},setValues:{voltage:100,temperature:100},relays:{cycleTime:1,list:[{total:1,list:[1]},{total:1,list:[1]},{total:1,list:[1]},{total:1,list:[1]}]},outputInterval:"30",chart:chartVar,file:new fileVar}),watch:{"ports.serial.selected":function(t,e){let s={type:"serial",command:"close"};s.port=e,this.sendDataToWSocket(s),this.status.serial={text:"[Not connected]",icon:"fa-fw fa-regular fa-circle-xmark"},s={},s.type="serial",s.command="open",s.port=t,s.baud=this.ports.serial.baud,s.tOut=this.ports.serial.tOut,this.sendDataToWSocket(s)},"ports.visa.selected":function(t,e){let s={type:"visa",command:"close"};s.resource=e,this.sendDataToWSocket(s),this.status.visa={text:"[Not connected]",icon:"fa-fw fa-regular fa-circle-xmark"},s={},s.type="visa",s.command="open",s.resource=t,this.sendDataToWSocket(s)},"relays.list":{handler(t,e){this.computeRelayTotals();try{this.computeRelayTotals();let t=this.relays.list[0].total;for(let e=1;e<this.relays.list.length;e++)t=leastCommonMultiple(t,this.relays.list[e].total);this.relays.cycleTime=t}catch(t){console.log("Error in relayTime"),console.log(t),this.relays.cycleTime=-1}},deep:!0}},computed:{samplingTimeInSec:function(){let t=30,e=1;try{let s=this.relays.list[0].list[0];for(let t=0;t<this.relays.list.length;t++)for(let e=0;e<this.relays.list[t].list.length;e++)s=greatestCommonDivisor(s,this.relays.list[t].list[e]);let a=math.evaluate(this.outputInterval);return[a,s]}catch(s){return console.log("Error in interpreting sampling time"),console.log(s),[t,e]}}},methods:{computeRelayTotals:function(){for(let t=0;t<this.relays.list.length;t++)this.relays.list[t].total=this.relays.list[t].list.reduce((t,e)=>t+e)},addRelayTime:function(t){this.status.process.isRunning||this.relays.list[t].list.push(1)},removeRelayTime:function(t){this.status.process.isRunning||this.relays.list[t].list.length>1&&this.relays.list[t].list.pop()},connectIfNeeded:function(){this.wSocket.readyState>1&&(this.wSocket=new WebSocket("ws://localhost:8765"),this.wSocket.onmessage=(t=>{this.onReceiveCode(t.data)}),this.wSocket.onopen=(()=>{this.status.da={text:"[Connected]",icon:"fa-fw fa-solid fa-check"},this.requestPortsList()}),this.wSocket.onclose=(()=>{this.status.da={text:"[Not connected]",icon:"fa-fw fa-regular fa-circle-xmark"}}))},onReceiveCode:function(t){try{if(jsonData=JSON5.parse(t),!jsonData.isError)if("serial"==jsonData.type){if("list"==jsonData.command&&(this.ports.serial.list=jsonData.response),"open"==jsonData.command&&this.ports.serial.selected==jsonData.port&&(this.status.serial={text:"[Connected]",icon:"fa-fw fa-solid fa-check"}),"sRCbor"==jsonData.command&&0==math.mod(this.status.process.t,this.status.process.outTimeInt)&&jsonData.response.R){let t={t:this.status.process.t,T:jsonData.response.R.T,TR:jsonData.response.R.R,S0:jsonData.response.R.S0?1:0,S1:jsonData.response.R.S1?1:0,S2:jsonData.response.R.S2?1:0,S3:jsonData.response.R.S3?1:0};chartVar.addDataPoint(t),this.file.addData(t),this.status.process.lastOutTime=this.status.process.t}}else"visa"==jsonData.type&&("list"==jsonData.command&&(this.ports.visa.list=jsonData.response),"open"==jsonData.command&&this.ports.visa.selected==jsonData.resource&&(this.status.visa={text:"[Connected]",icon:"fa-fw fa-solid fa-check"}))}catch(t){console.log("Error in interpretting."),console.log(t)}},requestPortsList:function(){command={type:"serial",command:"list"},this.sendDataToWSocket(command),command={type:"visa",command:"list"},this.sendDataToWSocket(command)},sendDataToWSocket:function(t){try{1==this.wSocket.readyState&&this.wSocket.send(JSON.stringify(t))}catch(t){console.log("Error sendin command to Websocket"),console.log(t)}},requestData:function(){this.status.process.t=this.status.process.t+1;let t={type:"serial"};t.port=this.ports.serial.selected,t.baud=this.ports.serial.baud,t.tOut=this.ports.serial.tOut,t.command="sRCbor",t.data={R:{R:null,T:null,S0:null,S1:null,S2:null,S3:null},W:{R:this.setValues.temperature}};for(let e=0;e<this.relays.list.length;e++){t.data.R["S"+e]=null;let s=0,a=math.mod(this.status.process.t,this.relays.list[e].total);for(let i=0;i<this.relays.list[e].list.length;i++)if(s+=this.relays.list[e].list[i],a<s){t.data.W["S"+e]=!isEven(i);break}}this.sendDataToWSocket(t)},startStop:function(){if(this.status.process.isRunning)clearInterval(this.status.process.hTimeInterval),this.status.process.isRunning=!1,this.file.saveAsCSV();else{if(this.status.process.rRI=this.samplingTimeInSec[1],1!=greatestCommonDivisor(1,this.status.process.rRI))return void alert("Relay times are not correct, please adjust them to match 1s sampling time.");if(this.status.process.outTimeInt=this.samplingTimeInSec[0],1!=greatestCommonDivisor(1,this.status.process.outTimeInt))return void alert("Selected output interval is incompatible with the 1s sampling time. Please adjust.");confirm("Warning: you are about to start the process.\n\nIt will remove all the previous data.\n\n\nAre you sure?")&&(this.status.process.isRunning=!0,chartVar.clear(),chartVar.init(),this.file.clearData(),this.status.process.t=-1,this.status.process.lastOutTime=-1/0,this.status.process.hTimeInterval=setInterval(()=>{vueApp.requestData()},1e3))}},graphDisplay:function(t){switch(chartVar.setVisibility("TR",!1),chartVar.setVisibility("T",!1),chartVar.setVisibility("R",!1),chartVar.setVisibility("S0",!1),chartVar.setVisibility("S1",!1),chartVar.setVisibility("S2",!1),chartVar.setVisibility("S3",!1),t){case 0:chartVar.setVisibility("TR",!0),chartVar.setVisibility("T",!0);break;case 1:chartVar.setVisibility("T",!0),chartVar.setVisibility("R",!0);break;case 2:chartVar.setVisibility("R",!0),chartVar.setVisibility("S0",!0),chartVar.setVisibility("S1",!0),chartVar.setVisibility("S2",!0),chartVar.setVisibility("S3",!0);break;case 3:chartVar.setVisibility("S0",!0),chartVar.setVisibility("S1",!0),chartVar.setVisibility("S2",!0),chartVar.setVisibility("S3",!0)}}},mounted:function(){chartVar.makeRoot(),chartVar.init()}}).mount("#app");setInterval(function(){vueApp.connectIfNeeded()},1e3);